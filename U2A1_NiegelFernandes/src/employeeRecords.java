/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Niegel
 */
import java.util.ArrayList;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.Date;

public class employeeRecords extends javax.swing.JFrame {
    private ArrayList<Employee> employeeList = new ArrayList<>();

    /**
     * Creates new form employeeRecords
     */
    public employeeRecords() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtFieldID = new javax.swing.JTextField();
        txtFieldFirstName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFieldLastName = new javax.swing.JTextField();
        txtFieldAnnualSalary = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFieldStartDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnList = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaDisplay = new javax.swing.JTextArea();
        txtFieldErrors = new javax.swing.JTextField();
        txtFieldSuccess = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID#");

        txtFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldIDActionPerformed(evt);
            }
        });

        txtFieldFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldFirstNameActionPerformed(evt);
            }
        });

        jLabel2.setText("First Name:");

        jLabel3.setText("Last Name:");

        jLabel4.setText("Annual Salary:");

        jLabel5.setText("Start Date:");

        jLabel6.setFont(new java.awt.Font("SimSun-ExtB", 1, 24)); // NOI18N
        jLabel6.setText("Employee Records");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnList.setText("List");
        btnList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListActionPerformed(evt);
            }
        });

        jLabel7.setText("Enter an ID# and press Remove");

        jLabel8.setText("to delete an Employee's Records.");

        txtAreaDisplay.setColumns(20);
        txtAreaDisplay.setRows(5);
        jScrollPane1.setViewportView(txtAreaDisplay);

        txtFieldErrors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldErrorsActionPerformed(evt);
            }
        });

        txtFieldSuccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldSuccessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtFieldFirstName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                                    .addComponent(txtFieldID, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFieldLastName)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtFieldStartDate))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtFieldAnnualSalary)))
                        .addGap(255, 255, 255)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdd)
                            .addComponent(btnRemove)
                            .addComponent(btnList)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtFieldErrors, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(txtFieldSuccess, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtFieldAnnualSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtFieldStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnList)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldErrors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFieldSuccess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFieldErrorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldErrorsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldErrorsActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
    String idText = txtFieldID.getText();
    String firstName = txtFieldFirstName.getText();
    String lastName = txtFieldLastName.getText();
    String salaryText = txtFieldAnnualSalary.getText();
    String startDateText = txtFieldStartDate.getText();

    // Validate the input fields
    if (idText.isEmpty() || firstName.isEmpty() || lastName.isEmpty() || salaryText.isEmpty() || startDateText.isEmpty()) {
        // Display an error message if any field is left blank
        txtFieldErrors.setText("All fields must be filled in.");
        return;
    }

    int employeeID;
    double annualSalary;
    Date startDate;

    // Parse and validate employee ID
    try {
        employeeID = Integer.parseInt(idText);
    } catch (NumberFormatException e) {
        txtFieldErrors.setText("Employee ID must be a valid integer.");
        return;
    }

    // Check for duplicate employee IDs
    if (isEmployeeIDAlreadyExists(employeeID)) {
        txtFieldErrors.setText("Employee ID already exists. Choose a different ID.");
        return;
    }

    // Parse and validate annual salary
    try {
        annualSalary = Double.parseDouble(salaryText);
    } catch (NumberFormatException e) {
        txtFieldErrors.setText("Annual Salary must be a valid number.");
        return;
    }

    // Parse and validate start date
    try {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        startDate = dateFormat.parse(startDateText);
    } catch (ParseException e) {
        txtFieldErrors.setText("Invalid date format. Use 'dd/MM/yyyy'.");
        return;
    }

    // Create a new Employee object
    Employee newEmployee = new Employee(employeeID, firstName, lastName, annualSalary, startDate);

    // Add the new Employee to your ArrayList
    employeeList.add(newEmployee);

    // Clear the text fields
    clearTextFields();

    // Optionally, display a success message
    txtFieldSuccess.setText("Employee added successfully.");
    
    
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldIDActionPerformed

    private void txtFieldFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldFirstNameActionPerformed

    private void btnListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListActionPerformed

    txtAreaDisplay.setText("");

    // Iterate through the employeeList and append each employee's information to the txtAreaDisplay
    for (Employee employee : employeeList) {
        appendEmployeeInfoToTextArea(employee);
    }
    }//GEN-LAST:event_btnListActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        String idText = txtFieldID.getText();
    
        // Validate the input (check if it's a valid integer)
        int employeeID;
        try {
            employeeID = Integer.parseInt(idText);
        } catch (NumberFormatException e) {
            txtFieldErrors.setText("Invalid Employee ID. Please enter a valid integer.");
            return;
        }

        // Find and remove the employee with the provided ID
        boolean employeeRemoved = false;
        for (Employee employee : employeeList) {
            if (employee.getEmployeeID() == employeeID) {
                employeeList.remove(employee);
                employeeRemoved = true;
                break; // Exit the loop once the employee is removed
            }
        }

        // If the employee was not found and removed, display an error message
        if (!employeeRemoved) {
            txtFieldErrors.setText("Employee with ID " + employeeID + " not found.");
        }

        // Clear the input field for the next operation
        txtFieldID.setText("");
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void txtFieldSuccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldSuccessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldSuccessActionPerformed
    private void appendEmployeeInfoToTextArea(Employee employee) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String employeeInfo = "Employee ID: " + employee.getEmployeeID() + ", Name: " + employee.getFirstName() + " " + employee.getLastName() +
            ", Salary: " + employee.getAnnualSalary() + ", Start Date: " + dateFormat.format(employee.getStartDate());

        // Append the employee information to the txtAreaDisplay
        txtAreaDisplay.append(employeeInfo + "\n");
    }
    // Check if the employee ID already exists in the ArrayList
    private boolean isEmployeeIDAlreadyExists(int employeeID) {
        for (Employee existingEmployee : employeeList) {
            if (existingEmployee.getEmployeeID() == employeeID) {
                return true;
            }
        }
        return false;
    }



    // Clear the text fields after adding an Employee
    private void clearTextFields() {
        txtFieldID.setText("");
        txtFieldFirstName.setText("");
        txtFieldLastName.setText("");
        txtFieldAnnualSalary.setText("");
        txtFieldStartDate.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(employeeRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(employeeRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(employeeRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(employeeRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new employeeRecords().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnList;
    private javax.swing.JButton btnRemove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtAreaDisplay;
    private javax.swing.JTextField txtFieldAnnualSalary;
    private javax.swing.JTextField txtFieldErrors;
    private javax.swing.JTextField txtFieldFirstName;
    private javax.swing.JTextField txtFieldID;
    private javax.swing.JTextField txtFieldLastName;
    private javax.swing.JTextField txtFieldStartDate;
    private javax.swing.JTextField txtFieldSuccess;
    // End of variables declaration//GEN-END:variables
}
